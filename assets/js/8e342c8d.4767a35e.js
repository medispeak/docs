"use strict";(self.webpackChunkmedispeak_temp=self.webpackChunkmedispeak_temp||[]).push([[182],{8930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"projects/proposal-template","title":"Project Proposal Template","description":"Personal Information","source":"@site/docs/projects/proposal-template.md","sourceDirName":"projects","slug":"/projects/proposal-template","permalink":"/docs/projects/proposal-template","draft":false,"unlisted":false,"editUrl":"https://github.com/medispeak/docs/tree/main/docs/projects/proposal-template.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Projects","permalink":"/docs/projects"},"next":{"title":"Open Source AI Models Integration","permalink":"/docs/projects/open-source-ai"}}');var r=t(4848),a=t(8453);const i={},l="Project Proposal Template",s={},c=[{value:"Personal Information",id:"personal-information",level:2},{value:"Project Selection",id:"project-selection",level:2},{value:"Project Understanding",id:"project-understanding",level:2},{value:"Technical Background",id:"technical-background",level:2},{value:"Implementation Plan",id:"implementation-plan",level:2},{value:"Availability",id:"availability",level:2},{value:"Previous Contributions",id:"previous-contributions",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"project-proposal-template",children:"Project Proposal Template"})}),"\n",(0,r.jsx)(n.h2,{id:"personal-information",children:"Personal Information"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Name: [Full Name]\nCollege: [College Name]\nProgram: [Program Name]\nSemester: [Current Semester]\nExpected Graduation: [MM/YYYY]\nEmail: [Email Address]\nTimezone: [e.g., IST (UTC+5:30)]\nGitHub: [Profile URL]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-selection",children:"Project Selection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Project: [Project Title]\nMentors: [From project page]\nTime Commitment: [Hours per week]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-understanding",children:"Project Understanding"}),"\n",(0,r.jsx)(n.p,{children:"Brief description of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Project goals and challenges"}),"\n",(0,r.jsx)(n.li,{children:"Your approach to solving it"}),"\n",(0,r.jsx)(n.li,{children:"Technical implementation plan"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"technical-background",children:"Technical Background"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Skills:\n  Languages: [e.g., Python, JavaScript]\n  Frameworks: [e.g., React, Rails]\n  Tools: [e.g., Docker, Git]\n\nRelevant Experience:\n  - [Brief description of related projects/internships]\n  - [Any open source contributions]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-plan",children:"Implementation Plan"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Week 1-2:\n  - [Major task 1]\n  - [Major task 2]\n\nWeek 3-4:\n  - [Major task 3]\n  - [Major task 4]\n\nWeek 5-6:\n  - [Major task 5]\n  - [Major task 6]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"availability",children:"Availability"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"Other Commitments:\n  - [List any classes, exams, or other commitments]\n  - [Include dates and impact on availability]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"previous-contributions",children:"Previous Contributions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"[Links to any PRs/Issues in Medispeak or other open source projects]"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(6540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);