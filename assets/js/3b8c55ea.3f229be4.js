"use strict";(self.webpackChunkmedispeak_temp=self.webpackChunkmedispeak_temp||[]).push([[803],{23:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"installation","title":"Installation Guide","description":"This guide will help you set up Medispeak in your preferred environment.","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/docs/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/medispeak/docs/tree/main/docs/installation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to Medispeak","permalink":"/docs/intro"},"next":{"title":"Best Practices","permalink":"/docs/best-practices"}}');var r=i(4848),l=i(8453);const t={},o="Installation Guide",c={},d=[{value:"Chrome Extension (Developer Mode)",id:"chrome-extension-developer-mode",level:2},{value:"WebApp Integration",id:"webapp-integration",level:2},{value:"Using Script Tag",id:"using-script-tag",level:3},{value:"EMR Configuration",id:"emr-configuration",level:2},{value:"Supported EMRs",id:"supported-emrs",level:3},{value:"CARE (Open Healthcare Network)",id:"care-open-healthcare-network",level:4},{value:"Bahmni EMR",id:"bahmni-emr",level:4},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Widget Options",id:"widget-options",level:3},{value:"Extension Options",id:"extension-options",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"installation-guide",children:"Installation Guide"})}),"\n",(0,r.jsx)(n.p,{children:"This guide will help you set up Medispeak in your preferred environment."}),"\n",(0,r.jsx)(n.h2,{id:"chrome-extension-developer-mode",children:"Chrome Extension (Developer Mode)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clone the repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/medispeak/extension.git\ncd extension\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Build the extension:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Load in Chrome:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Open Chrome and go to ",(0,r.jsx)(n.code,{children:"chrome://extensions/"})]}),"\n",(0,r.jsx)(n.li,{children:'Enable "Developer mode" in the top right'}),"\n",(0,r.jsx)(n.li,{children:'Click "Load unpacked"'}),"\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.code,{children:"build"})," directory from the extension folder"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"webapp-integration",children:"WebApp Integration"}),"\n",(0,r.jsx)(n.h3,{id:"using-script-tag",children:"Using Script Tag"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Add Script to HTML"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<script src="https://cdn.medispeak.io/widget.js"><\/script>\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initialize Widget"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<div id=\"medispeak-container\"></div>\n<script>\n  Medispeak.init({\n    container: 'medispeak-container',\n    apiKey: 'your-api-key',\n    emrSystem: 'care', // or 'bahmni' for Bahmni EMR\n    emrConfig: {\n      // Optional custom configuration for other web-based EMRs\n      baseUrl: 'your-emr-base-url',\n      fieldMappings: {\n        // Custom field mappings\n      }\n    }\n  });\n<\/script>\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"emr-configuration",children:"EMR Configuration"}),"\n",(0,r.jsx)(n.p,{children:"You can configure Medispeak to work with any web-based EMR by:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Access Medispeak Admin interface"}),"\n",(0,r.jsx)(n.li,{children:"Configure EMR connection details"}),"\n",(0,r.jsx)(n.li,{children:"Set up field mappings"}),"\n",(0,r.jsx)(n.li,{children:"Test the integration"}),"\n",(0,r.jsx)(n.li,{children:"Deploy configuration"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"supported-emrs",children:"Supported EMRs"}),"\n",(0,r.jsx)(n.h4,{id:"care-open-healthcare-network",children:"CARE (Open Healthcare Network)"}),"\n",(0,r.jsx)(n.h4,{id:"bahmni-emr",children:"Bahmni EMR"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Feel free to reach out to us to get access to the EMR configurations."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsx)(n.h3,{id:"widget-options",children:"Widget Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Theme customization"}),"\n",(0,r.jsx)(n.li,{children:"Voice recognition settings"}),"\n",(0,r.jsx)(n.li,{children:"EMR integration settings"}),"\n",(0,r.jsx)(n.li,{children:"UI customization"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"extension-options",children:"Extension Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Voice recognition sensitivity"}),"\n",(0,r.jsx)(n.li,{children:"EMR field mapping"}),"\n",(0,r.jsx)(n.li,{children:"Keyboard shortcuts"}),"\n",(0,r.jsx)(n.li,{children:"Privacy settings"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Voice Recognition Not Working"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check microphone permissions"}),"\n",(0,r.jsx)(n.li,{children:"Verify browser compatibility"}),"\n",(0,r.jsx)(n.li,{children:"Test microphone input levels"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"EMR Integration Issues"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify API credentials"}),"\n",(0,r.jsx)(n.li,{children:"Check network connectivity"}),"\n",(0,r.jsx)(n.li,{children:"Validate field mappings"}),"\n",(0,r.jsx)(n.li,{children:"Ensure EMR system is supported or properly configured"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Issues"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clear browser cache"}),"\n",(0,r.jsx)(n.li,{children:"Check system resources"}),"\n",(0,r.jsx)(n.li,{children:"Verify network speed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.p,{children:"If you encounter issues:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Check our ",(0,r.jsx)(n.a,{href:"/docs/faq",children:"FAQ"})]}),"\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak/issues",children:"GitHub Issues"})]}),"\n",(0,r.jsxs)(n.li,{children:["Join our ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak/discussions",children:"Community Discussion"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep API keys secure"}),"\n",(0,r.jsx)(n.li,{children:"Regularly update dependencies"}),"\n",(0,r.jsx)(n.li,{children:"Monitor system logs"}),"\n",(0,r.jsx)(n.li,{children:"Enable appropriate security headers"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After installation:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Complete the ",(0,r.jsx)(n.a,{href:"/docs/intro",children:"Getting Started"})," guide"]}),"\n",(0,r.jsxs)(n.li,{children:["Review ",(0,r.jsx)(n.a,{href:"/docs/best-practices",children:"Best Practices"})]}),"\n",(0,r.jsxs)(n.li,{children:["Explore our ",(0,r.jsx)(n.a,{href:"/docs/projects",children:"Projects"})]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);