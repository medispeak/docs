"use strict";(self.webpackChunkmedispeak_temp=self.webpackChunkmedispeak_temp||[]).push([[472],{9725:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"projects","title":"Projects","description":"Here are the key projects we\'re working on to enhance Medispeak\'s capabilities. We welcome contributions and discussions on these initiatives!","source":"@site/docs/projects.md","sourceDirName":".","slug":"/projects","permalink":"/docs/projects","draft":false,"unlisted":false,"editUrl":"https://github.com/medispeak/docs/tree/main/docs/projects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Contributing to Medispeak","permalink":"/docs/contribute"},"next":{"title":"Frequently Asked Questions","permalink":"/docs/faq"}}');var r=n(4848),s=n(8453);const o={},l="Projects",c={},a=[{value:"Support for Open Source AI Models",id:"support-for-open-source-ai-models",level:2},{value:"Self Hosted Whisper Support",id:"self-hosted-whisper-support",level:2},{value:"Multiple Recording Support",id:"multiple-recording-support",level:2},{value:"UI Based Setup of New Pages",id:"ui-based-setup-of-new-pages",level:2},{value:"Smart Navigation of EMR",id:"smart-navigation-of-emr",level:2},{value:"Live Transcription with Whisper",id:"live-transcription-with-whisper",level:2},{value:"Getting Involved",id:"getting-involved",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"projects",children:"Projects"})}),"\n",(0,r.jsx)(i.p,{children:"Here are the key projects we're working on to enhance Medispeak's capabilities. We welcome contributions and discussions on these initiatives!"}),"\n",(0,r.jsx)(i.h2,{id:"support-for-open-source-ai-models",children:"Support for Open Source AI Models"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Integration with various open-source AI models for transcription and understanding"}),"\n",(0,r.jsx)(i.li,{children:"Support for local model deployment"}),"\n",(0,r.jsx)(i.li,{children:"Customizable model training for specific medical specialties"}),"\n",(0,r.jsx)(i.li,{children:"Performance optimization for different hardware configurations"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"self-hosted-whisper-support",children:"Self Hosted Whisper Support"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Local deployment of Whisper models"}),"\n",(0,r.jsx)(i.li,{children:"Custom model fine-tuning capabilities"}),"\n",(0,r.jsx)(i.li,{children:"Offline transcription support"}),"\n",(0,r.jsx)(i.li,{children:"Resource usage optimization"}),"\n",(0,r.jsx)(i.li,{children:"Docker container support"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"multiple-recording-support",children:"Multiple Recording Support"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Recording recoding multiple voice notes, and then transcribing them all at once."}),"\n",(0,r.jsx)(i.li,{children:"Session management for multiple recordings"}),"\n",(0,r.jsx)(i.li,{children:"Batch processing capabilities"}),"\n",(0,r.jsx)(i.li,{children:"Audio quality optimization"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"ui-based-setup-of-new-pages",children:"UI Based Setup of New Pages"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Smartly populate fields based on the HTML of the current page"}),"\n",(0,r.jsx)(i.li,{children:"Ability to fully setup the form template from the Extension UI"}),"\n",(0,r.jsx)(i.li,{children:"Template management system"}),"\n",(0,r.jsx)(i.li,{children:"Real-time preview capabilities"}),"\n",(0,r.jsx)(i.li,{children:"Export/import configuration"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"smart-navigation-of-emr",children:"Smart Navigation of EMR"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Voice-controlled EMR navigation"}),"\n",(0,r.jsx)(i.li,{children:"Context-aware command interpretation"}),"\n",(0,r.jsx)(i.li,{children:"Customizable navigation shortcuts"}),"\n",(0,r.jsx)(i.li,{children:"Smart field detection"}),"\n",(0,r.jsx)(i.li,{children:"Adaptive learning from user patterns"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"live-transcription-with-whisper",children:"Live Transcription with Whisper"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Real-time audio streaming to Whisper"}),"\n",(0,r.jsx)(i.li,{children:"Low-latency transcription"}),"\n",(0,r.jsx)(i.li,{children:"Continuous transcription mode"}),"\n",(0,r.jsx)(i.li,{children:"Automatic punctuation and formatting"}),"\n",(0,r.jsx)(i.li,{children:"Error correction on the fly"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"getting-involved",children:"Getting Involved"}),"\n",(0,r.jsx)(i.p,{children:"If you're interested in contributing to any of these projects:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Check our ",(0,r.jsx)(i.a,{href:"/docs/contribute",children:"Contributing Guidelines"})]}),"\n",(0,r.jsxs)(i.li,{children:["Join the discussion in our ",(0,r.jsx)(i.a,{href:"https://github.com/medispeak/discussions",children:"GitHub Discussions"})]}),"\n",(0,r.jsx)(i.li,{children:"Pick a project that interests you"}),"\n",(0,r.jsx)(i.li,{children:"Start with our development setup guide"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"We prioritize contributions based on:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Community needs"}),"\n",(0,r.jsx)(i.li,{children:"Technical feasibility"}),"\n",(0,r.jsx)(i.li,{children:"Impact on user experience"}),"\n",(0,r.jsx)(i.li,{children:"Available resources"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Your contributions can help make healthcare documentation more efficient and accessible for everyone!"})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>l});var t=n(6540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);