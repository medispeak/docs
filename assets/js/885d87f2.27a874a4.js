"use strict";(self.webpackChunkmedispeak_temp=self.webpackChunkmedispeak_temp||[]).push([[31],{9875:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"projects/multiple-recording","title":"Multiple Recording Support","description":"Overview","source":"@site/docs/projects/multiple-recording.md","sourceDirName":"projects","slug":"/projects/multiple-recording","permalink":"/docs/projects/multiple-recording","draft":false,"unlisted":false,"editUrl":"https://github.com/medispeak/docs/tree/main/docs/projects/multiple-recording.md","tags":[],"version":"current","frontMatter":{}}');var r=i(4848),l=i(8453);const t={},c="Multiple Recording Support",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Project Details",id:"project-details",level:2},{value:"Skills Required",id:"skills-required",level:2},{value:"Acceptance Criteria",id:"acceptance-criteria",level:2},{value:"Milestones",id:"milestones",level:2},{value:"Phase 1: Core Recording Features (20-25 hours)",id:"phase-1-core-recording-features-20-25-hours",level:3},{value:"Phase 2: Batch Processing (15-20 hours)",id:"phase-2-batch-processing-15-20-hours",level:3},{value:"Phase 3: UI/UX Enhancement (15-20 hours)",id:"phase-3-uiux-enhancement-15-20-hours",level:3},{value:"Phase 4: Testing &amp; Polish (10-15 hours)",id:"phase-4-testing--polish-10-15-hours",level:3}];function h(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"multiple-recording-support",children:"Multiple Recording Support"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Enable recording multiple voice notes and batch processing them for efficient documentation workflow."}),"\n",(0,r.jsx)(n.h2,{id:"project-details",children:"Project Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complexity"}),": Medium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Estimated Time"}),": 60-80 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mentors"}),": Gigin (FE), Ajil (FE)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Project Links"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Frontend: ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak/medispeak-app",children:"https://github.com/medispeak/medispeak-app"})]}),"\n",(0,r.jsxs)(n.li,{children:["Backend: ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak/medispeak-backend",children:"https://github.com/medispeak/medispeak-backend"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"skills-required",children:"Skills Required"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"React"}),"\n",(0,r.jsx)(n.li,{children:"TypeScript"}),"\n",(0,r.jsx)(n.li,{children:"Audio processing (Web Audio API)"}),"\n",(0,r.jsx)(n.li,{children:"State management"}),"\n",(0,r.jsx)(n.li,{children:"UI/UX design"}),"\n",(0,r.jsx)(n.li,{children:"Performance optimization"}),"\n",(0,r.jsx)(n.li,{children:"Testing (Jest, React Testing Library)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"acceptance-criteria",children:"Acceptance Criteria"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Support recording multiple voice notes"}),"\n",(0,r.jsx)(n.li,{children:"Implement batch processing of recordings"}),"\n",(0,r.jsx)(n.li,{children:"Create intuitive UI for managing recordings"}),"\n",(0,r.jsx)(n.li,{children:"Enable audio quality optimization"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"milestones",children:"Milestones"}),"\n",(0,r.jsx)(n.h3,{id:"phase-1-core-recording-features-20-25-hours",children:"Phase 1: Core Recording Features (20-25 hours)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement multiple recording support"}),"\n",(0,r.jsx)(n.li,{children:"Create recording management UI"}),"\n",(0,r.jsx)(n.li,{children:"Add basic audio processing"}),"\n",(0,r.jsx)(n.li,{children:"Implement storage mechanism"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-2-batch-processing-15-20-hours",children:"Phase 2: Batch Processing (15-20 hours)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create batch processing system"}),"\n",(0,r.jsx)(n.li,{children:"Implement progress tracking"}),"\n",(0,r.jsx)(n.li,{children:"Add error handling"}),"\n",(0,r.jsx)(n.li,{children:"Optimize performance"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-3-uiux-enhancement-15-20-hours",children:"Phase 3: UI/UX Enhancement (15-20 hours)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Improve user interface"}),"\n",(0,r.jsx)(n.li,{children:"Add animations and feedback"}),"\n",(0,r.jsx)(n.li,{children:"Implement offline support"}),"\n",(0,r.jsx)(n.li,{children:"Create loading states"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-4-testing--polish-10-15-hours",children:"Phase 4: Testing & Polish (10-15 hours)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write comprehensive tests"}),"\n",(0,r.jsx)(n.li,{children:"Performance optimization"}),"\n",(0,r.jsx)(n.li,{children:"Browser compatibility testing"}),"\n",(0,r.jsx)(n.li,{children:"Documentation updates"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var s=i(6540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);