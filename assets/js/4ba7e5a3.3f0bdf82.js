"use strict";(self.webpackChunkmedispeak_temp=self.webpackChunkmedispeak_temp||[]).push([[591],{7028:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"contribute","title":"Contributing to Medispeak","description":"We\'re excited that you\'re interested in contributing to Medispeak! This document provides guidelines and instructions for contributing to our open-source project.","source":"@site/docs/contribute.md","sourceDirName":".","slug":"/contribute","permalink":"/docs/contribute","draft":false,"unlisted":false,"editUrl":"https://github.com/medispeak/docs/tree/main/docs/contribute.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Live Transcription with Multimodal LLMs","permalink":"/docs/projects/live-transcription"},"next":{"title":"Frequently Asked Questions","permalink":"/docs/faq"}}');var r=i(4848),t=i(8453);const l={},d="Contributing to Medispeak",c={},o=[{value:"Ways to Contribute",id:"ways-to-contribute",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Code Standards",id:"code-standards",level:2},{value:"Frontend (React)",id:"frontend-react",level:3},{value:"Backend (Rails)",id:"backend-rails",level:3},{value:"Testing",id:"testing",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Code Review Process",id:"code-review-process",level:2},{value:"Community Guidelines",id:"community-guidelines",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Recognition",id:"recognition",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"contributing-to-medispeak",children:"Contributing to Medispeak"})}),"\n",(0,r.jsx)(n.p,{children:"We're excited that you're interested in contributing to Medispeak! This document provides guidelines and instructions for contributing to our open-source project."}),"\n",(0,r.jsx)(n.h2,{id:"ways-to-contribute",children:"Ways to Contribute"}),"\n",(0,r.jsx)(n.p,{children:"There are many ways to contribute to Medispeak:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Code Contributions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bug fixes"}),"\n",(0,r.jsx)(n.li,{children:"Feature implementations"}),"\n",(0,r.jsx)(n.li,{children:"Performance improvements"}),"\n",(0,r.jsx)(n.li,{children:"Documentation updates"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Non-Code Contributions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bug reports"}),"\n",(0,r.jsx)(n.li,{children:"Feature requests"}),"\n",(0,r.jsx)(n.li,{children:"Documentation improvements"}),"\n",(0,r.jsx)(n.li,{children:"User experience feedback"}),"\n",(0,r.jsx)(n.li,{children:"Testing and quality assurance"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fork the Repository"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit the ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak",children:"Medispeak GitHub repository"})]}),"\n",(0,r.jsx)(n.li,{children:'Click the "Fork" button to create your copy'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Clone Your Fork"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/YOUR-USERNAME/medispeak.git\ncd medispeak\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Set Up Development Environment"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Frontend (React)\ncd frontend\nnpm install\n\n# Backend (Rails)\ncd backend\nbundle install\nrails db:setup\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create a Branch"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature/your-feature-name\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Make Changes"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write clean, maintainable code"}),"\n",(0,r.jsx)(n.li,{children:"Follow our coding standards"}),"\n",(0,r.jsx)(n.li,{children:"Add tests for new features"}),"\n",(0,r.jsx)(n.li,{children:"Update documentation as needed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Commit Your Changes"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'git commit -m "Description of your changes"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Push to Your Fork"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git push origin feature/your-feature-name\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create a Pull Request"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Go to the Medispeak repository"}),"\n",(0,r.jsx)(n.li,{children:'Click "New Pull Request"'}),"\n",(0,r.jsx)(n.li,{children:"Select your branch"}),"\n",(0,r.jsx)(n.li,{children:"Fill out the PR template"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-standards",children:"Code Standards"}),"\n",(0,r.jsx)(n.h3,{id:"frontend-react",children:"Frontend (React)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use TypeScript for type safety"}),"\n",(0,r.jsx)(n.li,{children:"Follow React best practices"}),"\n",(0,r.jsx)(n.li,{children:"Use functional components and hooks"}),"\n",(0,r.jsx)(n.li,{children:"Implement responsive design"}),"\n",(0,r.jsx)(n.li,{children:"Write unit tests using Jest"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"backend-rails",children:"Backend (Rails)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Follow Ruby style guide"}),"\n",(0,r.jsx)(n.li,{children:"Write clear, documented APIs"}),"\n",(0,r.jsx)(n.li,{children:"Include RSpec tests"}),"\n",(0,r.jsx)(n.li,{children:"Use proper ActiveRecord patterns"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write tests for new features"}),"\n",(0,r.jsx)(n.li,{children:"Ensure all tests pass before submitting PR"}),"\n",(0,r.jsx)(n.li,{children:"Include both unit and integration tests"}),"\n",(0,r.jsx)(n.li,{children:"Test across different browsers (for frontend)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Update README.md when adding features"}),"\n",(0,r.jsx)(n.li,{children:"Document API changes"}),"\n",(0,r.jsx)(n.li,{children:"Include JSDoc comments for frontend"}),"\n",(0,r.jsx)(n.li,{children:"Add YARD documentation for Ruby code"}),"\n",(0,r.jsx)(n.li,{children:"Update this contribution guide if needed"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-review-process",children:"Code Review Process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Initial Review"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Code quality check"}),"\n",(0,r.jsx)(n.li,{children:"Test coverage verification"}),"\n",(0,r.jsx)(n.li,{children:"Documentation review"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Feedback"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Address reviewer comments"}),"\n",(0,r.jsx)(n.li,{children:"Make requested changes"}),"\n",(0,r.jsx)(n.li,{children:"Update PR as needed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Merge"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Squash and merge after approval"}),"\n",(0,r.jsx)(n.li,{children:"Delete branch after merge"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"community-guidelines",children:"Community Guidelines"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Be respectful and inclusive"}),"\n",(0,r.jsx)(n.li,{children:"Follow our code of conduct"}),"\n",(0,r.jsx)(n.li,{children:"Help others learn and grow"}),"\n",(0,r.jsx)(n.li,{children:"Provide constructive feedback"}),"\n",(0,r.jsx)(n.li,{children:"Participate in discussions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Join our ",(0,r.jsx)(n.a,{href:"https://github.com/medispeak/discussions",children:"GitHub Discussions"})]}),"\n",(0,r.jsx)(n.li,{children:"Check existing issues and PRs"}),"\n",(0,r.jsx)(n.li,{children:"Read our documentation"}),"\n",(0,r.jsx)(n.li,{children:"Ask questions in the community"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"recognition",children:"Recognition"}),"\n",(0,r.jsx)(n.p,{children:"Contributors are recognized in:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Release notes"}),"\n",(0,r.jsx)(n.li,{children:"Contributors list"}),"\n",(0,r.jsx)(n.li,{children:"Special mentions for significant contributions"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Thank you for contributing to Medispeak! Together, we're making healthcare documentation more efficient and accessible."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);